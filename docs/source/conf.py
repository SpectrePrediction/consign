# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

import os
import sys

from pathlib import Path

# consign/consign/
abspath = os.path.abspath('../../')
sys.path.insert(0, abspath)


# -- Project information -----------------------------------------------------

project = 'consign'
copyright = '2022, SpectrePrediction'
author = 'SpectrePrediction'

# The full version, including alpha/beta/rc tags

# Parse version
line = ""

with open(os.path.join(abspath, "consign", "__init__.py"), mode='r', encoding="utf-8") as f:
    read_text = f.read()

for line in read_text.split("\n"):
    if line.startswith("__version__ ="):
        break
version = line.split(" = ")[-1].strip('"')

release = version


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.napoleon',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.linkcode',
    'sphinx_copybutton',
    'sphinx.ext.autosummary',
    'sphinx_design',
    # "sphinx_inline_tabs",  # 需要py3.8 用design替代
    'sphinx_automodapi.automodapi'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'zh_CN'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# linkcode


def linkcode_resolve(domain, info):

    filename = info['module']
    if domain != 'py' or not filename:
        return None

    if filename.count('.') <= 1:
        return "https://github.com/SpectrePrediction/consign/blob/main/DocsErrorTips.md"
    
    filename = info['module'].replace('.', '/')
    return f"https://github.com/SpectrePrediction/consign/blob/main/{filename}.py"

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
# 默认的比较丑
# html_theme = 'sphinx_rtd_theme'

# 比较好看简洁的但是侧边栏不知道怎么弄
# import sphinx_bootstrap_theme
# html_theme = 'bootstrap'
# html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()
# # 橙色 united， 黑色 cosmo， 砂岩 sandstone
# html_theme_options = {
#     'navbar_links': [ 
#         ("Examples", "examples"), 
#         ("Link", "http://example.com", True), 
#     ],
#     'bootswatch_theme': 'sandstone', 
# }
# html_sidebars  = { 'sidebar' : [ 'localtoc.html' , 'sourcelink.html' , 'searchbox.html' ]}


# 看起来很简洁，但python版本不支持3.6, 他最好看，为了他现在使用更高版本的python
html_theme = "furo"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']
